{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\franc\\\\Desktop\\\\Projetos\\\\ProjetoAdvocaciaFront\\\\src\\\\screens\\\\home\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { Box, Typography } from \"@mui/material\";\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { DateCalendar } from '@mui/x-date-pickers/DateCalendar';\nimport dayjs from 'dayjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(dayjs());\n  useEffect(() => {\n    // Buscar processos do backend\n    fetch('http://localhost:8080/api/processo').then(response => response.json()).then(data => {\n      // Converter dados para o formato de eventos do FullCalendar\n      const eventsData = data.map(processo => ({\n        title: processo.titulo,\n        date: processo.prazo\n      }));\n      setEvents(eventsData);\n    }).catch(error => console.error('Erro ao buscar processos:', error));\n  }, []);\n  const handleDateChange = newDate => {\n    setSelectedDate(newDate);\n  };\n  return /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n    dateAdapter: AdapterDayjs,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        height: '100vh',\n        padding: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '65%',\n          backgroundColor: '#f0f0f0',\n          padding: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Calend\\xE1rio Grande\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n          plugins: [dayGridPlugin],\n          initialView: \"dayGridMonth\",\n          events: events,\n          date: selectedDate.toDate(),\n          initialDate: selectedDate.toDate()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '35%',\n          backgroundColor: '#ffffff',\n          padding: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Selecionar Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DateCalendar, {\n          value: selectedDate,\n          onChange: newDate => handleDateChange(newDate),\n          views: ['year', 'month', 'day'],\n          openTo: \"month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"4DNSTsWvu+ynR34WIrVzlpKTIoI=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","LocalizationProvider","AdapterDayjs","Box","Typography","FullCalendar","dayGridPlugin","DateCalendar","dayjs","jsxDEV","_jsxDEV","Home","_s","events","setEvents","selectedDate","setSelectedDate","fetch","then","response","json","data","eventsData","map","processo","title","titulo","date","prazo","catch","error","console","handleDateChange","newDate","dateAdapter","children","sx","display","justifyContent","height","padding","width","backgroundColor","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","plugins","initialView","toDate","initialDate","value","onChange","views","openTo","_c","$RefreshReg$"],"sources":["C:/Users/franc/Desktop/Projetos/ProjetoAdvocaciaFront/src/screens/home/home.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { Box, Typography } from \"@mui/material\";\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport { DateCalendar } from '@mui/x-date-pickers/DateCalendar';\r\nimport dayjs from 'dayjs';\r\n\r\nconst Home = () => {\r\n    const [events, setEvents] = useState([]);\r\n    const [selectedDate, setSelectedDate] = useState(dayjs());\r\n\r\n    useEffect(() => {\r\n        // Buscar processos do backend\r\n        fetch('http://localhost:8080/api/processo')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                // Converter dados para o formato de eventos do FullCalendar\r\n                const eventsData = data.map(processo => ({\r\n                    title: processo.titulo,\r\n                    date: processo.prazo,\r\n                }));\r\n                setEvents(eventsData);\r\n            })\r\n            .catch(error => console.error('Erro ao buscar processos:', error));\r\n    }, []);\r\n\r\n    const handleDateChange = (newDate) => {\r\n        setSelectedDate(newDate);\r\n    };\r\n\r\n    return (\r\n        <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', height: '100vh', padding: 2 }}>\r\n                {/* FullCalendar à esquerda ocupando metade da tela */}\r\n                <Box sx={{ width: '65%', backgroundColor: '#f0f0f0', padding: 2 }}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        Calendário Grande\r\n                    </Typography>\r\n                    <FullCalendar\r\n                        plugins={[dayGridPlugin]}\r\n                        initialView=\"dayGridMonth\"\r\n                        events={events}\r\n                        date={selectedDate.toDate()}\r\n                        initialDate={selectedDate.toDate()}\r\n                    />\r\n                </Box>\r\n\r\n                {/* Calendário pequeno na direita */}\r\n                <Box sx={{ width: '35%', backgroundColor: '#ffffff', padding: 2 }}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        Selecionar Data\r\n                    </Typography>\r\n                    <DateCalendar\r\n                        value={selectedDate}\r\n                        onChange={(newDate) => handleDateChange(newDate)}\r\n                        views={['year', 'month', 'day']}\r\n                        openTo=\"month\"\r\n                    />\r\n                </Box>\r\n            </Box>\r\n        </LocalizationProvider>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}