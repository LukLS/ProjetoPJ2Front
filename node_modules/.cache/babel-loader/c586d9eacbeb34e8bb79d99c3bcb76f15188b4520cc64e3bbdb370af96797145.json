{"ast":null,"code":"// src/services/websocket.js\n\nclass WebSocketClient {\n  constructor() {\n    this.socket = null;\n  }\n  connect(url) {\n    this.socket = new WebSocket(url);\n    this.socket.onopen = () => {\n      console.log('WebSocket connection established');\n    };\n    this.socket.onmessage = event => {\n      console.log('WebSocket message received:', event.data);\n    };\n    this.socket.onclose = () => {\n      console.log('WebSocket connection closed');\n    };\n    this.socket.onerror = error => {\n      console.error('WebSocket error:', error);\n    };\n  }\n  sendMessage(message) {\n    if (this.socket && this.socket.readyState === WebSocket.OPEN) {\n      this.socket.send(message);\n    } else {\n      console.error('WebSocket is not open. Ready state is:', this.socket.readyState);\n    }\n  }\n}\nconst webSocketClient = new WebSocketClient();\nexport default webSocketClient;","map":{"version":3,"names":["WebSocketClient","constructor","socket","connect","url","WebSocket","onopen","console","log","onmessage","event","data","onclose","onerror","error","sendMessage","message","readyState","OPEN","send","webSocketClient"],"sources":["C:/Users/franc/Desktop/Projetos/ProjetoAdvocaciaFront/src/services/websocket.js"],"sourcesContent":["// src/services/websocket.js\r\n\r\nclass WebSocketClient {\r\n    constructor() {\r\n      this.socket = null;\r\n    }\r\n  \r\n    connect(url) {\r\n      this.socket = new WebSocket(url);\r\n  \r\n      this.socket.onopen = () => {\r\n        console.log('WebSocket connection established');\r\n      };\r\n  \r\n      this.socket.onmessage = (event) => {\r\n        console.log('WebSocket message received:', event.data);\r\n      };\r\n  \r\n      this.socket.onclose = () => {\r\n        console.log('WebSocket connection closed');\r\n      };\r\n  \r\n      this.socket.onerror = (error) => {\r\n        console.error('WebSocket error:', error);\r\n      };\r\n    }\r\n  \r\n    sendMessage(message) {\r\n      if (this.socket && this.socket.readyState === WebSocket.OPEN) {\r\n        this.socket.send(message);\r\n      } else {\r\n        console.error('WebSocket is not open. Ready state is:', this.socket.readyState);\r\n      }\r\n    }\r\n  }\r\n  \r\n  const webSocketClient = new WebSocketClient();\r\n  export default webSocketClient;\r\n  "],"mappings":"AAAA;;AAEA,MAAMA,eAAe,CAAC;EAClBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,MAAM,GAAG,IAAI;EACpB;EAEAC,OAAOA,CAACC,GAAG,EAAE;IACX,IAAI,CAACF,MAAM,GAAG,IAAIG,SAAS,CAACD,GAAG,CAAC;IAEhC,IAAI,CAACF,MAAM,CAACI,MAAM,GAAG,MAAM;MACzBC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;IACjD,CAAC;IAED,IAAI,CAACN,MAAM,CAACO,SAAS,GAAIC,KAAK,IAAK;MACjCH,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEE,KAAK,CAACC,IAAI,CAAC;IACxD,CAAC;IAED,IAAI,CAACT,MAAM,CAACU,OAAO,GAAG,MAAM;MAC1BL,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC5C,CAAC;IAED,IAAI,CAACN,MAAM,CAACW,OAAO,GAAIC,KAAK,IAAK;MAC/BP,OAAO,CAACO,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IAC1C,CAAC;EACH;EAEAC,WAAWA,CAACC,OAAO,EAAE;IACnB,IAAI,IAAI,CAACd,MAAM,IAAI,IAAI,CAACA,MAAM,CAACe,UAAU,KAAKZ,SAAS,CAACa,IAAI,EAAE;MAC5D,IAAI,CAAChB,MAAM,CAACiB,IAAI,CAACH,OAAO,CAAC;IAC3B,CAAC,MAAM;MACLT,OAAO,CAACO,KAAK,CAAC,wCAAwC,EAAE,IAAI,CAACZ,MAAM,CAACe,UAAU,CAAC;IACjF;EACF;AACF;AAEA,MAAMG,eAAe,GAAG,IAAIpB,eAAe,CAAC,CAAC;AAC7C,eAAeoB,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}