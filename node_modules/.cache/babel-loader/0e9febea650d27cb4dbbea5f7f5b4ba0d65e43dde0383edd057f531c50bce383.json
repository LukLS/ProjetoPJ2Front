{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\franc\\\\Desktop\\\\Projetos\\\\ProjetoAdvocaciaFront\\\\src\\\\screens\\\\home\\\\home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { Box, Typography } from \"@mui/material\";\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { DateCalendar } from '@mui/x-date-pickers/DateCalendar';\nimport dayjs from 'dayjs';\nimport 'dayjs/locale/pt-br'; // Importa a localização para português\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndayjs.locale('pt-br'); // Define o locale para português\n\nconst Home = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [selectedDate, setSelectedDate] = useState(dayjs());\n  useEffect(() => {\n    // Buscar processos do backend\n    fetch('http://localhost:8080/api/processo').then(response => response.json()).then(data => {\n      const eventsData = data.map(processo => ({\n        title: processo.titulo,\n        date: processo.prazo\n      }));\n      setEvents(eventsData);\n    }).catch(error => console.error('Erro ao buscar processos:', error));\n  }, []);\n  const handleDateChange = newDate => {\n    // Atualiza a data selecionada\n    setSelectedDate(newDate);\n  };\n  return /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n    dateAdapter: AdapterDayjs,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        height: '100vh',\n        padding: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '65%',\n          backgroundColor: '#f0f0f0',\n          padding: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: [selectedDate.format('MMMM YYYY').toUpperCase(), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FullCalendar, {\n          plugins: [dayGridPlugin],\n          initialView: \"dayGridMonth\",\n          events: events,\n          initialDate: selectedDate.toDate(),\n          headerToolbar: false // Remove a navegação de mês do FullCalendar\n        }, selectedDate, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '35%',\n          backgroundColor: '#ffffff',\n          padding: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Selecionar Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DateCalendar, {\n          value: selectedDate,\n          onChange: handleDateChange,\n          views: ['year', 'month'],\n          openTo: \"month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"4DNSTsWvu+ynR34WIrVzlpKTIoI=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","LocalizationProvider","AdapterDayjs","Box","Typography","FullCalendar","dayGridPlugin","DateCalendar","dayjs","jsxDEV","_jsxDEV","locale","Home","_s","events","setEvents","selectedDate","setSelectedDate","fetch","then","response","json","data","eventsData","map","processo","title","titulo","date","prazo","catch","error","console","handleDateChange","newDate","dateAdapter","children","sx","display","justifyContent","height","padding","width","backgroundColor","variant","gutterBottom","format","toUpperCase","fileName","_jsxFileName","lineNumber","columnNumber","plugins","initialView","initialDate","toDate","headerToolbar","value","onChange","views","openTo","_c","$RefreshReg$"],"sources":["C:/Users/franc/Desktop/Projetos/ProjetoAdvocaciaFront/src/screens/home/home.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\r\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\r\nimport { Box, Typography } from \"@mui/material\";\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport { DateCalendar } from '@mui/x-date-pickers/DateCalendar';\r\nimport dayjs from 'dayjs';\r\nimport 'dayjs/locale/pt-br'; // Importa a localização para português\r\n\r\ndayjs.locale('pt-br'); // Define o locale para português\r\n\r\nconst Home = () => {\r\n    const [events, setEvents] = useState([]);\r\n    const [selectedDate, setSelectedDate] = useState(dayjs());\r\n\r\n    useEffect(() => {\r\n        // Buscar processos do backend\r\n        fetch('http://localhost:8080/api/processo')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const eventsData = data.map(processo => ({\r\n                    title: processo.titulo,\r\n                    date: processo.prazo,\r\n                }));\r\n                setEvents(eventsData);\r\n            })\r\n            .catch(error => console.error('Erro ao buscar processos:', error));\r\n    }, []);\r\n\r\n    const handleDateChange = (newDate) => {\r\n        // Atualiza a data selecionada\r\n        setSelectedDate(newDate);\r\n    };\r\n\r\n    return (\r\n        <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', height: '100vh', padding: 2 }}>\r\n                {/* FullCalendar à esquerda ocupando 65% da tela */}\r\n                <Box sx={{ width: '65%', backgroundColor: '#f0f0f0', padding: 2 }}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        {selectedDate.format('MMMM YYYY').toUpperCase()} {/* Exibe o nome do mês e ano em português */}\r\n                    </Typography>\r\n                    <FullCalendar\r\n                        plugins={[dayGridPlugin]}\r\n                        initialView=\"dayGridMonth\"\r\n                        events={events}\r\n                        initialDate={selectedDate.toDate()}\r\n                        headerToolbar={false} // Remove a navegação de mês do FullCalendar\r\n                        key={selectedDate} \r\n                    />\r\n                </Box>\r\n\r\n                {/* Calendário pequeno na direita */}\r\n                <Box sx={{ width: '35%', backgroundColor: '#ffffff', padding: 2 }}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                        Selecionar Data\r\n                    </Typography>\r\n                    <DateCalendar\r\n                        value={selectedDate}\r\n                        onChange={handleDateChange}\r\n                        views={['year', 'month']}\r\n                        openTo=\"month\"\r\n                    />\r\n                </Box>\r\n            </Box>\r\n        </LocalizationProvider>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}