{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\franc\\\\Desktop\\\\Projetos\\\\ProjetoAdvocaciaFront\\\\src\\\\components\\\\AuthContext.js\",\n  _s = $RefreshSig$();\n// src/main/AuthContext.js\nimport React, { createContext, useState } from 'react';\n\n// Criação do contexto de autenticação\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Provedor de autenticação que fornece o contexto para os componentes filhos\nconst AuthProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  // Estado de autenticação, inicialmente falso (não autenticado)\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Função para autenticar o usuário\n  const login = () => {\n    setIsAuthenticated(true);\n  };\n\n  // Função para deslogar o usuário\n  const logout = () => {\n    setIsAuthenticated(false);\n  };\n  return (\n    /*#__PURE__*/\n    // Provedor do contexto de autenticação, passando o estado e funções de autenticação\n    _jsxDEV(AuthContext.Provider, {\n      value: {\n        isAuthenticated,\n        login,\n        logout\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(AuthProvider, \"BT2f1XiqCgFHwobQTWR7kond0Ig=\");\n_c = AuthProvider;\nexport { AuthContext, AuthProvider };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","AuthContext","AuthProvider","_ref","_s","children","isAuthenticated","setIsAuthenticated","login","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/franc/Desktop/Projetos/ProjetoAdvocaciaFront/src/components/AuthContext.js"],"sourcesContent":["// src/main/AuthContext.js\r\nimport React, { createContext, useState } from 'react';\r\n\r\n// Criação do contexto de autenticação\r\nconst AuthContext = createContext();\r\n\r\n// Provedor de autenticação que fornece o contexto para os componentes filhos\r\nconst AuthProvider = ({ children }) => {\r\n    // Estado de autenticação, inicialmente falso (não autenticado)\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n    // Função para autenticar o usuário\r\n    const login = () => {\r\n        setIsAuthenticated(true);\r\n    };\r\n\r\n    // Função para deslogar o usuário\r\n    const logout = () => {\r\n        setIsAuthenticated(false);\r\n    };\r\n\r\n    return (\r\n        // Provedor do contexto de autenticação, passando o estado e funções de autenticação\r\n        <AuthContext.Provider value={{ isAuthenticated, login, logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport { AuthContext, AuthProvider };\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;;AAEtD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,CAAC;;AAEnC;AACA,MAAMK,YAAY,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAC9B;EACA,MAAM,CAACG,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;;EAE7D;EACA,MAAMU,KAAK,GAAGA,CAAA,KAAM;IAChBD,kBAAkB,CAAC,IAAI,CAAC;EAC5B,CAAC;;EAED;EACA,MAAME,MAAM,GAAGA,CAAA,KAAM;IACjBF,kBAAkB,CAAC,KAAK,CAAC;EAC7B,CAAC;EAED;IAAA;IACI;IACAP,OAAA,CAACC,WAAW,CAACS,QAAQ;MAACC,KAAK,EAAE;QAAEL,eAAe;QAAEE,KAAK;QAAEC;MAAO,CAAE;MAAAJ,QAAA,EAC3DA;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS;EAAC;AAE/B,CAAC;AAACX,EAAA,CApBIF,YAAY;AAAAc,EAAA,GAAZd,YAAY;AAsBlB,SAASD,WAAW,EAAEC,YAAY;AAAG,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}